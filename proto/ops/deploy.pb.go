// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/ops/deploy.proto

package ops

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Target struct {
	Repo                 string   `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	Pkg                  string   `protobuf:"bytes,2,opt,name=pkg,proto3" json:"pkg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Target) Reset()         { *m = Target{} }
func (m *Target) String() string { return proto.CompactTextString(m) }
func (*Target) ProtoMessage()    {}
func (*Target) Descriptor() ([]byte, []int) {
	return fileDescriptor_deploy_3364d5d8fd46ce69, []int{0}
}
func (m *Target) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Target.Unmarshal(m, b)
}
func (m *Target) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Target.Marshal(b, m, deterministic)
}
func (dst *Target) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Target.Merge(dst, src)
}
func (m *Target) XXX_Size() int {
	return xxx_messageInfo_Target.Size(m)
}
func (m *Target) XXX_DiscardUnknown() {
	xxx_messageInfo_Target.DiscardUnknown(m)
}

var xxx_messageInfo_Target proto.InternalMessageInfo

func (m *Target) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *Target) GetPkg() string {
	if m != nil {
		return m.Pkg
	}
	return ""
}

type TargetOutbound struct {
	Targets              []*Target `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TargetOutbound) Reset()         { *m = TargetOutbound{} }
func (m *TargetOutbound) String() string { return proto.CompactTextString(m) }
func (*TargetOutbound) ProtoMessage()    {}
func (*TargetOutbound) Descriptor() ([]byte, []int) {
	return fileDescriptor_deploy_3364d5d8fd46ce69, []int{1}
}
func (m *TargetOutbound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetOutbound.Unmarshal(m, b)
}
func (m *TargetOutbound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetOutbound.Marshal(b, m, deterministic)
}
func (dst *TargetOutbound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetOutbound.Merge(dst, src)
}
func (m *TargetOutbound) XXX_Size() int {
	return xxx_messageInfo_TargetOutbound.Size(m)
}
func (m *TargetOutbound) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetOutbound.DiscardUnknown(m)
}

var xxx_messageInfo_TargetOutbound proto.InternalMessageInfo

func (m *TargetOutbound) GetTargets() []*Target {
	if m != nil {
		return m.Targets
	}
	return nil
}

func init() {
	proto.RegisterType((*Target)(nil), "ops.Target")
	proto.RegisterType((*TargetOutbound)(nil), "ops.TargetOutbound")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DeployClient is the client API for Deploy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeployClient interface {
	GetTargets(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TargetOutbound, error)
}

type deployClient struct {
	cc *grpc.ClientConn
}

func NewDeployClient(cc *grpc.ClientConn) DeployClient {
	return &deployClient{cc}
}

func (c *deployClient) GetTargets(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TargetOutbound, error) {
	out := new(TargetOutbound)
	err := c.cc.Invoke(ctx, "/ops.Deploy/GetTargets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeployServer is the server API for Deploy service.
type DeployServer interface {
	GetTargets(context.Context, *empty.Empty) (*TargetOutbound, error)
}

func RegisterDeployServer(s *grpc.Server, srv DeployServer) {
	s.RegisterService(&_Deploy_serviceDesc, srv)
}

func _Deploy_GetTargets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployServer).GetTargets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ops.Deploy/GetTargets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployServer).GetTargets(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Deploy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ops.Deploy",
	HandlerType: (*DeployServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTargets",
			Handler:    _Deploy_GetTargets_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/ops/deploy.proto",
}

func init() { proto.RegisterFile("proto/ops/deploy.proto", fileDescriptor_deploy_3364d5d8fd46ce69) }

var fileDescriptor_deploy_3364d5d8fd46ce69 = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8e, 0x41, 0xeb, 0x82, 0x40,
	0x10, 0x47, 0xf1, 0xef, 0x1f, 0xa3, 0x11, 0x22, 0x36, 0x10, 0xb1, 0x8b, 0x08, 0x81, 0xa7, 0x5d,
	0xb0, 0x43, 0x74, 0xae, 0xe8, 0x18, 0x48, 0x5f, 0x20, 0x71, 0xdb, 0x43, 0xd6, 0x0c, 0xee, 0x7a,
	0xe8, 0xdb, 0x87, 0xb3, 0x09, 0xdd, 0x86, 0xf7, 0x7b, 0xec, 0x3e, 0x48, 0xa8, 0x47, 0x87, 0x0a,
	0xc9, 0xaa, 0x56, 0x53, 0x87, 0x6f, 0xc9, 0x40, 0x84, 0x48, 0x36, 0x5b, 0x1b, 0x44, 0xd3, 0x69,
	0xc5, 0xa8, 0x19, 0xee, 0x4a, 0x3f, 0xc9, 0x7d, 0x8d, 0x42, 0x42, 0x74, 0xbd, 0xf5, 0x46, 0x3b,
	0x21, 0xe0, 0xbf, 0xd7, 0x84, 0x69, 0x90, 0x07, 0xe5, 0xbc, 0xe6, 0x5b, 0x2c, 0x21, 0xa4, 0x87,
	0x49, 0xff, 0x18, 0x8d, 0x67, 0xb1, 0x83, 0x85, 0xf7, 0x2f, 0x83, 0x6b, 0x70, 0x78, 0xb5, 0x62,
	0x03, 0x33, 0xc7, 0xc4, 0xa6, 0x41, 0x1e, 0x96, 0x71, 0x15, 0x4b, 0x24, 0x2b, 0xbd, 0x55, 0x4f,
	0x5b, 0x75, 0x80, 0xe8, 0xc8, 0x69, 0x62, 0x0f, 0x70, 0xd6, 0xce, 0xef, 0x56, 0x24, 0xd2, 0xe7,
	0xc9, 0x29, 0x4f, 0x9e, 0xc6, 0xbc, 0x6c, 0xf5, 0xf3, 0xca, 0xf4, 0x57, 0x13, 0xb1, 0xb4, 0xfd,
	0x04, 0x00, 0x00, 0xff, 0xff, 0xb9, 0xf9, 0xf6, 0xba, 0xf0, 0x00, 0x00, 0x00,
}
