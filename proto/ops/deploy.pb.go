// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/ops/deploy.proto

package ops

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DeployProgress int32

const (
	DeployProgress_STARTED DeployProgress = 0
	DeployProgress_RUNNING DeployProgress = 1
	DeployProgress_SUCCESS DeployProgress = 2
	DeployProgress_ERROR   DeployProgress = 3
)

var DeployProgress_name = map[int32]string{
	0: "STARTED",
	1: "RUNNING",
	2: "SUCCESS",
	3: "ERROR",
}
var DeployProgress_value = map[string]int32{
	"STARTED": 0,
	"RUNNING": 1,
	"SUCCESS": 2,
	"ERROR":   3,
}

func (x DeployProgress) String() string {
	return proto.EnumName(DeployProgress_name, int32(x))
}
func (DeployProgress) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_deploy_f4f7e54767df1f49, []int{0}
}

type Target struct {
	Repo                 string   `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	Pkg                  string   `protobuf:"bytes,2,opt,name=pkg,proto3" json:"pkg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Target) Reset()         { *m = Target{} }
func (m *Target) String() string { return proto.CompactTextString(m) }
func (*Target) ProtoMessage()    {}
func (*Target) Descriptor() ([]byte, []int) {
	return fileDescriptor_deploy_f4f7e54767df1f49, []int{0}
}
func (m *Target) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Target.Unmarshal(m, b)
}
func (m *Target) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Target.Marshal(b, m, deterministic)
}
func (dst *Target) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Target.Merge(dst, src)
}
func (m *Target) XXX_Size() int {
	return xxx_messageInfo_Target.Size(m)
}
func (m *Target) XXX_DiscardUnknown() {
	xxx_messageInfo_Target.DiscardUnknown(m)
}

var xxx_messageInfo_Target proto.InternalMessageInfo

func (m *Target) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *Target) GetPkg() string {
	if m != nil {
		return m.Pkg
	}
	return ""
}

type TargetOutbound struct {
	Targets              []*Target `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TargetOutbound) Reset()         { *m = TargetOutbound{} }
func (m *TargetOutbound) String() string { return proto.CompactTextString(m) }
func (*TargetOutbound) ProtoMessage()    {}
func (*TargetOutbound) Descriptor() ([]byte, []int) {
	return fileDescriptor_deploy_f4f7e54767df1f49, []int{1}
}
func (m *TargetOutbound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetOutbound.Unmarshal(m, b)
}
func (m *TargetOutbound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetOutbound.Marshal(b, m, deterministic)
}
func (dst *TargetOutbound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetOutbound.Merge(dst, src)
}
func (m *TargetOutbound) XXX_Size() int {
	return xxx_messageInfo_TargetOutbound.Size(m)
}
func (m *TargetOutbound) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetOutbound.DiscardUnknown(m)
}

var xxx_messageInfo_TargetOutbound proto.InternalMessageInfo

func (m *TargetOutbound) GetTargets() []*Target {
	if m != nil {
		return m.Targets
	}
	return nil
}

type DeployInbound struct {
	Owner                string   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Repository           string   `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	Branch               string   `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
	Package              string   `protobuf:"bytes,4,opt,name=package,proto3" json:"package,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployInbound) Reset()         { *m = DeployInbound{} }
func (m *DeployInbound) String() string { return proto.CompactTextString(m) }
func (*DeployInbound) ProtoMessage()    {}
func (*DeployInbound) Descriptor() ([]byte, []int) {
	return fileDescriptor_deploy_f4f7e54767df1f49, []int{2}
}
func (m *DeployInbound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployInbound.Unmarshal(m, b)
}
func (m *DeployInbound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployInbound.Marshal(b, m, deterministic)
}
func (dst *DeployInbound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployInbound.Merge(dst, src)
}
func (m *DeployInbound) XXX_Size() int {
	return xxx_messageInfo_DeployInbound.Size(m)
}
func (m *DeployInbound) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployInbound.DiscardUnknown(m)
}

var xxx_messageInfo_DeployInbound proto.InternalMessageInfo

func (m *DeployInbound) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *DeployInbound) GetRepository() string {
	if m != nil {
		return m.Repository
	}
	return ""
}

func (m *DeployInbound) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *DeployInbound) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

type DeployOutbound struct {
	Title                string         `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Message              string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Progress             DeployProgress `protobuf:"varint,3,opt,name=progress,proto3,enum=ops.DeployProgress" json:"progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DeployOutbound) Reset()         { *m = DeployOutbound{} }
func (m *DeployOutbound) String() string { return proto.CompactTextString(m) }
func (*DeployOutbound) ProtoMessage()    {}
func (*DeployOutbound) Descriptor() ([]byte, []int) {
	return fileDescriptor_deploy_f4f7e54767df1f49, []int{3}
}
func (m *DeployOutbound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployOutbound.Unmarshal(m, b)
}
func (m *DeployOutbound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployOutbound.Marshal(b, m, deterministic)
}
func (dst *DeployOutbound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployOutbound.Merge(dst, src)
}
func (m *DeployOutbound) XXX_Size() int {
	return xxx_messageInfo_DeployOutbound.Size(m)
}
func (m *DeployOutbound) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployOutbound.DiscardUnknown(m)
}

var xxx_messageInfo_DeployOutbound proto.InternalMessageInfo

func (m *DeployOutbound) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *DeployOutbound) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeployOutbound) GetProgress() DeployProgress {
	if m != nil {
		return m.Progress
	}
	return DeployProgress_STARTED
}

func init() {
	proto.RegisterType((*Target)(nil), "ops.Target")
	proto.RegisterType((*TargetOutbound)(nil), "ops.TargetOutbound")
	proto.RegisterType((*DeployInbound)(nil), "ops.DeployInbound")
	proto.RegisterType((*DeployOutbound)(nil), "ops.DeployOutbound")
	proto.RegisterEnum("ops.DeployProgress", DeployProgress_name, DeployProgress_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DeployClient is the client API for Deploy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeployClient interface {
	GetTargets(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TargetOutbound, error)
	Execute(ctx context.Context, in *DeployInbound, opts ...grpc.CallOption) (Deploy_ExecuteClient, error)
}

type deployClient struct {
	cc *grpc.ClientConn
}

func NewDeployClient(cc *grpc.ClientConn) DeployClient {
	return &deployClient{cc}
}

func (c *deployClient) GetTargets(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TargetOutbound, error) {
	out := new(TargetOutbound)
	err := c.cc.Invoke(ctx, "/ops.Deploy/GetTargets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deployClient) Execute(ctx context.Context, in *DeployInbound, opts ...grpc.CallOption) (Deploy_ExecuteClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Deploy_serviceDesc.Streams[0], "/ops.Deploy/Execute", opts...)
	if err != nil {
		return nil, err
	}
	x := &deployExecuteClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Deploy_ExecuteClient interface {
	Recv() (*DeployOutbound, error)
	grpc.ClientStream
}

type deployExecuteClient struct {
	grpc.ClientStream
}

func (x *deployExecuteClient) Recv() (*DeployOutbound, error) {
	m := new(DeployOutbound)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DeployServer is the server API for Deploy service.
type DeployServer interface {
	GetTargets(context.Context, *empty.Empty) (*TargetOutbound, error)
	Execute(*DeployInbound, Deploy_ExecuteServer) error
}

func RegisterDeployServer(s *grpc.Server, srv DeployServer) {
	s.RegisterService(&_Deploy_serviceDesc, srv)
}

func _Deploy_GetTargets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployServer).GetTargets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ops.Deploy/GetTargets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployServer).GetTargets(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deploy_Execute_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DeployInbound)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeployServer).Execute(m, &deployExecuteServer{stream})
}

type Deploy_ExecuteServer interface {
	Send(*DeployOutbound) error
	grpc.ServerStream
}

type deployExecuteServer struct {
	grpc.ServerStream
}

func (x *deployExecuteServer) Send(m *DeployOutbound) error {
	return x.ServerStream.SendMsg(m)
}

var _Deploy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ops.Deploy",
	HandlerType: (*DeployServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTargets",
			Handler:    _Deploy_GetTargets_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Execute",
			Handler:       _Deploy_Execute_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/ops/deploy.proto",
}

func init() { proto.RegisterFile("proto/ops/deploy.proto", fileDescriptor_deploy_f4f7e54767df1f49) }

var fileDescriptor_deploy_f4f7e54767df1f49 = []byte{
	// 364 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x51, 0xdf, 0x6b, 0xea, 0x30,
	0x18, 0xbd, 0xb5, 0xda, 0x5e, 0x3f, 0xb9, 0x52, 0xa2, 0x48, 0xf1, 0xc2, 0x90, 0xc2, 0x40, 0xf6,
	0xd0, 0x0e, 0x37, 0x18, 0x7b, 0xdc, 0xb4, 0x88, 0x2f, 0x3a, 0xa2, 0xfe, 0x01, 0xad, 0x66, 0x9d,
	0xa8, 0x4d, 0x96, 0xa4, 0x38, 0xff, 0xfb, 0xd1, 0xa4, 0x91, 0xbe, 0xe5, 0x9c, 0xf3, 0xe5, 0x9c,
	0xef, 0x07, 0x0c, 0x18, 0xa7, 0x92, 0x46, 0x94, 0x89, 0x68, 0x4f, 0xd8, 0x89, 0x5e, 0x43, 0x45,
	0x20, 0x9b, 0x32, 0x31, 0xfc, 0x9f, 0x51, 0x9a, 0x9d, 0x48, 0xa4, 0xa8, 0xb4, 0xf8, 0x8c, 0xc8,
	0x99, 0xc9, 0xaa, 0x22, 0x08, 0xc1, 0xd9, 0x24, 0x3c, 0x23, 0x12, 0x21, 0x68, 0x72, 0xc2, 0xa8,
	0x6f, 0x8d, 0xac, 0x71, 0x1b, 0xab, 0x37, 0xf2, 0xc0, 0x66, 0xc7, 0xcc, 0x6f, 0x28, 0xaa, 0x7c,
	0x06, 0x2f, 0xd0, 0xd5, 0xf5, 0xab, 0x42, 0xa6, 0xb4, 0xc8, 0xf7, 0xe8, 0x1e, 0x5c, 0xa9, 0x18,
	0xe1, 0x5b, 0x23, 0x7b, 0xdc, 0x99, 0x74, 0x42, 0xca, 0x44, 0xa8, 0xab, 0xb0, 0xd1, 0x82, 0x0b,
	0xfc, 0x9b, 0xa9, 0xd6, 0x16, 0xb9, 0xfe, 0xd7, 0x87, 0x16, 0xbd, 0xe4, 0x84, 0x57, 0x81, 0x1a,
	0xa0, 0x3b, 0x80, 0x32, 0x59, 0x1c, 0x24, 0xe5, 0xd7, 0x2a, 0xb8, 0xc6, 0xa0, 0x01, 0x38, 0x29,
	0x4f, 0xf2, 0xdd, 0x97, 0x6f, 0x2b, 0xad, 0x42, 0xc8, 0x07, 0x97, 0x25, 0xbb, 0x63, 0x92, 0x11,
	0xbf, 0xa9, 0x04, 0x03, 0x83, 0x6f, 0xe8, 0xea, 0xe0, 0x5b, 0xc7, 0x7d, 0x68, 0xc9, 0x83, 0x3c,
	0x11, 0x93, 0xac, 0x40, 0xe9, 0x70, 0x26, 0x42, 0x94, 0x0e, 0x3a, 0xd6, 0x40, 0x14, 0xc1, 0x5f,
	0xc6, 0x69, 0xc6, 0x89, 0x10, 0x2a, 0xb5, 0x3b, 0xe9, 0xa9, 0x11, 0xb5, 0xed, 0x47, 0x25, 0xe1,
	0x5b, 0xd1, 0xc3, 0xbb, 0x89, 0x34, 0x1a, 0xea, 0x80, 0xbb, 0xde, 0xbc, 0xe1, 0x4d, 0x3c, 0xf3,
	0xfe, 0x94, 0x00, 0x6f, 0x97, 0xcb, 0xc5, 0x72, 0xee, 0x59, 0x4a, 0xd9, 0x4e, 0xa7, 0xf1, 0x7a,
	0xed, 0x35, 0x50, 0x1b, 0x5a, 0x31, 0xc6, 0x2b, 0xec, 0xd9, 0x93, 0x2b, 0x38, 0xda, 0x03, 0xbd,
	0x02, 0xcc, 0x89, 0xd4, 0xfb, 0x14, 0x68, 0x10, 0xea, 0x73, 0x86, 0xe6, 0x9c, 0x61, 0x5c, 0x9e,
	0x73, 0xd8, 0xab, 0x6d, 0xfd, 0x36, 0xe9, 0x33, 0xb8, 0xf1, 0x0f, 0xd9, 0x15, 0x92, 0x20, 0x54,
	0x6b, 0xb9, 0x3a, 0xc1, 0xb0, 0x3e, 0x86, 0xf9, 0xf3, 0x68, 0xa5, 0x8e, 0xb2, 0x7e, 0xfa, 0x0d,
	0x00, 0x00, 0xff, 0xff, 0xc9, 0xb9, 0xda, 0x95, 0x56, 0x02, 0x00, 0x00,
}
